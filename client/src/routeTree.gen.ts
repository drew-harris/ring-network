/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SimulatorImport } from './routes/simulator'
import { Route as RegisterImport } from './routes/register'
import { Route as LoginImport } from './routes/login'
import { Route as IndexImport } from './routes/index'
import { Route as SimulatorIndexImport } from './routes/simulator/index'
import { Route as SimulatorLayoutImport } from './routes/simulator/_layout'

// Create/Update Routes

const SimulatorRoute = SimulatorImport.update({
  path: '/simulator',
  getParentRoute: () => rootRoute,
} as any)

const RegisterRoute = RegisterImport.update({
  path: '/register',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const SimulatorIndexRoute = SimulatorIndexImport.update({
  path: '/',
  getParentRoute: () => SimulatorRoute,
} as any)

const SimulatorLayoutRoute = SimulatorLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => SimulatorRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterImport
      parentRoute: typeof rootRoute
    }
    '/simulator': {
      id: '/simulator'
      path: '/simulator'
      fullPath: '/simulator'
      preLoaderRoute: typeof SimulatorImport
      parentRoute: typeof rootRoute
    }
    '/simulator/_layout': {
      id: '/simulator/_layout'
      path: ''
      fullPath: '/simulator'
      preLoaderRoute: typeof SimulatorLayoutImport
      parentRoute: typeof SimulatorImport
    }
    '/simulator/': {
      id: '/simulator/'
      path: '/'
      fullPath: '/simulator/'
      preLoaderRoute: typeof SimulatorIndexImport
      parentRoute: typeof SimulatorImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  LoginRoute,
  RegisterRoute,
  SimulatorRoute: SimulatorRoute.addChildren({ SimulatorIndexRoute }),
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/login",
        "/register",
        "/simulator"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/register": {
      "filePath": "register.tsx"
    },
    "/simulator": {
      "filePath": "simulator.tsx",
      "children": [
        "/simulator/_layout",
        "/simulator/"
      ]
    },
    "/simulator/_layout": {
      "filePath": "simulator/_layout.tsx",
      "parent": "/simulator"
    },
    "/simulator/": {
      "filePath": "simulator/index.tsx",
      "parent": "/simulator"
    }
  }
}
ROUTE_MANIFEST_END */
