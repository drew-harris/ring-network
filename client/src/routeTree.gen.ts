/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SimulatorImport } from './routes/simulator'
import { Route as ResetImport } from './routes/reset'
import { Route as RegisterImport } from './routes/register'
import { Route as LoginImport } from './routes/login'
import { Route as IndexImport } from './routes/index'
import { Route as UserinfoIndexImport } from './routes/userinfo.index'
import { Route as SimulatorIndexImport } from './routes/simulator/index'
import { Route as AdminIndexImport } from './routes/admin.index'
import { Route as SimulatorMessagesIndexImport } from './routes/simulator/messages.index'

// Create/Update Routes

const SimulatorRoute = SimulatorImport.update({
  path: '/simulator',
  getParentRoute: () => rootRoute,
} as any)

const ResetRoute = ResetImport.update({
  path: '/reset',
  getParentRoute: () => rootRoute,
} as any)

const RegisterRoute = RegisterImport.update({
  path: '/register',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const UserinfoIndexRoute = UserinfoIndexImport.update({
  path: '/userinfo/',
  getParentRoute: () => rootRoute,
} as any)

const SimulatorIndexRoute = SimulatorIndexImport.update({
  path: '/',
  getParentRoute: () => SimulatorRoute,
} as any)

const AdminIndexRoute = AdminIndexImport.update({
  path: '/admin/',
  getParentRoute: () => rootRoute,
} as any)

const SimulatorMessagesIndexRoute = SimulatorMessagesIndexImport.update({
  path: '/messages/',
  getParentRoute: () => SimulatorRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterImport
      parentRoute: typeof rootRoute
    }
    '/reset': {
      id: '/reset'
      path: '/reset'
      fullPath: '/reset'
      preLoaderRoute: typeof ResetImport
      parentRoute: typeof rootRoute
    }
    '/simulator': {
      id: '/simulator'
      path: '/simulator'
      fullPath: '/simulator'
      preLoaderRoute: typeof SimulatorImport
      parentRoute: typeof rootRoute
    }
    '/admin/': {
      id: '/admin/'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminIndexImport
      parentRoute: typeof rootRoute
    }
    '/simulator/': {
      id: '/simulator/'
      path: '/'
      fullPath: '/simulator/'
      preLoaderRoute: typeof SimulatorIndexImport
      parentRoute: typeof SimulatorImport
    }
    '/userinfo/': {
      id: '/userinfo/'
      path: '/userinfo'
      fullPath: '/userinfo'
      preLoaderRoute: typeof UserinfoIndexImport
      parentRoute: typeof rootRoute
    }
    '/simulator/messages/': {
      id: '/simulator/messages/'
      path: '/messages'
      fullPath: '/simulator/messages'
      preLoaderRoute: typeof SimulatorMessagesIndexImport
      parentRoute: typeof SimulatorImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  LoginRoute,
  RegisterRoute,
  ResetRoute,
  SimulatorRoute: SimulatorRoute.addChildren({
    SimulatorIndexRoute,
    SimulatorMessagesIndexRoute,
  }),
  AdminIndexRoute,
  UserinfoIndexRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/login",
        "/register",
        "/reset",
        "/simulator",
        "/admin/",
        "/userinfo/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/register": {
      "filePath": "register.tsx"
    },
    "/reset": {
      "filePath": "reset.tsx"
    },
    "/simulator": {
      "filePath": "simulator.tsx",
      "children": [
        "/simulator/",
        "/simulator/messages/"
      ]
    },
    "/admin/": {
      "filePath": "admin.index.tsx"
    },
    "/simulator/": {
      "filePath": "simulator/index.tsx",
      "parent": "/simulator"
    },
    "/userinfo/": {
      "filePath": "userinfo.index.tsx"
    },
    "/simulator/messages/": {
      "filePath": "simulator/messages.index.tsx",
      "parent": "/simulator"
    }
  }
}
ROUTE_MANIFEST_END */
